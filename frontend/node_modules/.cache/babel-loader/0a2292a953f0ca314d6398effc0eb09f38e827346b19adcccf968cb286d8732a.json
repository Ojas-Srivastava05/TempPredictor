{"ast":null,"code":"import React,{useState}from'react';import{CloudIcon,ThermometerIcon,MapPinIcon,SparklesIcon}from'@heroicons/react/24/outline';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[city,setCity]=useState('Delhi');const[manualTemp,setManualTemp]=useState('');const[result,setResult]=useState('');const[loading,setLoading]=useState(false);const fetchCurrentTemp=async()=>{if(!city.trim()){setResult('Please enter a city name');return;}setLoading(true);setResult('Loading...');try{const response=await fetch(\"/api/current-temp?city=\".concat(encodeURIComponent(city)));const data=await response.json();if(!response.ok){setResult(\"Error: \".concat(data.error||JSON.stringify(data)));return;}setResult(\"City: \".concat(data.city,\" \\u2014 Current: \").concat(data.current_temp,\"\\xB0C \\u2014 Predicted tomorrow: \").concat(data.predicted_tomorrow,\"\\xB0C\"));}catch(error){setResult(\"Network error: \".concat(error.message));}finally{setLoading(false);}};const predictFromManualTemp=async()=>{const temp=parseFloat(manualTemp);if(isNaN(temp)){setResult('Please enter a valid number');return;}setLoading(true);setResult('Predicting...');try{const response=await fetch('/api/predict',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({today_temp:temp})});const data=await response.json();if(!response.ok){setResult(\"Error: \".concat(data.error||JSON.stringify(data)));return;}setResult(\"Today: \".concat(data.today,\"\\xB0C \\u2014 Predicted tomorrow: \").concat(data.predicted_tomorrow,\"\\xB0C\"));}catch(error){setResult(\"Network error: \".concat(error.message));}finally{setLoading(false);}};// ...rest of the component remains the same...\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-blue-400 via-purple-500 to-pink-500 flex items-center justify-center p-4\"});}export default App;","map":{"version":3,"names":["React","useState","CloudIcon","ThermometerIcon","MapPinIcon","SparklesIcon","jsx","_jsx","App","city","setCity","manualTemp","setManualTemp","result","setResult","loading","setLoading","fetchCurrentTemp","trim","response","fetch","concat","encodeURIComponent","data","json","ok","error","JSON","stringify","current_temp","predicted_tomorrow","message","predictFromManualTemp","temp","parseFloat","isNaN","method","headers","body","today_temp","today","className"],"sources":["/Users/ojas/Desktop/TempPredictor/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { CloudIcon, ThermometerIcon, MapPinIcon, SparklesIcon } from '@heroicons/react/24/outline';\n\nfunction App() {\n  const [city, setCity] = useState('Delhi');\n  const [manualTemp, setManualTemp] = useState('');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchCurrentTemp = async () => {\n    if (!city.trim()) {\n      setResult('Please enter a city name');\n      return;\n    }\n    \n    setLoading(true);\n    setResult('Loading...');\n    \n    try {\n      const response = await fetch(`/api/current-temp?city=${encodeURIComponent(city)}`);\n      const data = await response.json();\n      \n      if (!response.ok) {\n        setResult(`Error: ${data.error || JSON.stringify(data)}`);\n        return;\n      }\n      \n      setResult(`City: ${data.city} — Current: ${data.current_temp}°C — Predicted tomorrow: ${data.predicted_tomorrow}°C`);\n    } catch (error) {\n      setResult(`Network error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const predictFromManualTemp = async () => {\n    const temp = parseFloat(manualTemp);\n    if (isNaN(temp)) {\n      setResult('Please enter a valid number');\n      return;\n    }\n    \n    setLoading(true);\n    setResult('Predicting...');\n    \n    try {\n      const response = await fetch('/api/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ today_temp: temp })\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        setResult(`Error: ${data.error || JSON.stringify(data)}`);\n        return;\n      }\n      \n      setResult(`Today: ${data.today}°C — Predicted tomorrow: ${data.predicted_tomorrow}°C`);\n    } catch (error) {\n      setResult(`Network error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ...rest of the component remains the same...\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-400 via-purple-500 to-pink-500 flex items-center justify-center p-4\">\n      {/* ...existing JSX code... */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}